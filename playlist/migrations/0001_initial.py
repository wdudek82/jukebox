# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-10-05 09:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import playlist.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to=playlist.models.upload_to)),
                ('published_at', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name': 'Album',
                'verbose_name_plural': 'Albums',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Artist',
                'verbose_name_plural': 'Artists',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(default='default', max_length=30)),
                ('category_code', models.CharField(max_length=1, unique=True)),
            ],
            options={
                'ordering': ('category_name',),
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre_name', models.CharField(max_length=30, unique=True)),
                ('genre_code', models.CharField(max_length=1, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('genre_name',),
                'verbose_name': 'Genre',
                'verbose_name_plural': 'Genres',
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('song_id', models.CharField(max_length=15, unique=True)),
                ('title', models.CharField(max_length=50)),
                ('mood', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('energy', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('tempo', models.CharField(choices=[('SS', 'ad lib-60'), ('SM', '61-81'), ('SF', '82-89'), ('MS', '90-97'), ('MM', '98-106'), ('MF', '107-118'), ('FS', '119-124'), ('FM', '125-130'), ('FF', '131-inf.')], default='SS', max_length=2)),
                ('file', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playlist.Album')),
                ('artists', models.ManyToManyField(related_name='artists', to='playlist.Artist')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playlist.Category')),
                ('genres', models.ManyToManyField(to='playlist.Genre')),
                ('related_artists', models.ManyToManyField(blank=True, related_name='related_artists', to='playlist.Artist')),
                ('related_tracks', models.ManyToManyField(blank=True, to='playlist.Track')),
            ],
            options={
                'verbose_name': 'Track',
                'verbose_name_plural': 'Tracks',
            },
        ),
    ]
